(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(89)),o={id:"keymatrix",title:"Key Matrix",sidebar_label:"Key Matrix"},d={unversionedId:"testing_hardware/keymatrix",id:"testing_hardware/keymatrix",isDocsHomePage:!1,title:"Key Matrix",description:"` python",source:"@site/docs/testing_hardware/keymatrix.md",slug:"/testing_hardware/keymatrix",permalink:"/docs/testing_hardware/keymatrix",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/testing_hardware/keymatrix.md",version:"current",sidebar_label:"Key Matrix",sidebar:"someSidebar",previous:{title:"Analog Input and Outputs",permalink:"/docs/testing_hardware/analog"}},s=[],c={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import board\nimport keypad\n\nkeys = keypad.KeyMatrix(\n    row_pins=(board.P1_11, board.P0_03, board.P0_28, board.P1_13),\n    column_pins=(board.P0_02, board.P0_29, board.P0_30, board.P0_26),\n    columns_to_anodes=True,\n)\n\n\nwhile True:\n    key_event = keys.events.get()\n    if key_event:\n        print(key_event)\n\n")))}p.isMDXComponent=!0}}]);