(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{71:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return u}));var n=a(2),i=a(6),r=(a(0),a(90)),c={id:"getting_started",title:"Getting Started",sidebar_label:"Getting Started",slug:"/"},o={unversionedId:"getting_started",id:"getting_started",isDocsHomePage:!1,title:"Getting Started",description:"Get some supported hardware.",source:"@site/docs/getting_started.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/getting_started.md",version:"current",sidebar_label:"Getting Started",sidebar:"someSidebar",next:{title:"Features Compared",permalink:"/docs/features"}},l=[{value:"Input Devices",id:"input-devices",children:[]},{value:"Output devices",id:"output-devices",children:[]},{value:"HID Profiles",id:"hid-profiles",children:[]},{value:"HID Connections",id:"hid-connections",children:[]}],b={rightToc:l};function u(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Get some supported hardware.\nGet a supported version of CircuitPython.  Download it ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://circuitpython.org/downloads"}),"here"),".  PyKey uses features included in CircuitPython 7.0.0."),Object(r.b)("p",null,"Latest builds are available ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://adafruit-circuit-python.s3.amazonaws.com/index.html?prefix=bin/"}),"here")),Object(r.b)("p",null,"Needs the following modules:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"analogio"),Object(r.b)("li",{parentName:"ul"},"board"),Object(r.b)("li",{parentName:"ul"},"digitalio"),Object(r.b)("li",{parentName:"ul"},"keypad"),Object(r.b)("li",{parentName:"ul"},"pwmio"),Object(r.b)("li",{parentName:"ul"},"rotaryio"),Object(r.b)("li",{parentName:"ul"},"time"),Object(r.b)("li",{parentName:"ul"},"usb_hid")),Object(r.b)("p",null,"Need the following libraries:"),Object(r.b)("p",null,"From:",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://learn.adafruit.com/circuitpython-essentials/circuitpython-pins-and-modules"}),"here")," "),Object(r.b)("h1",{id:"read-basics"},"Read basics"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://learn.adafruit.com/circuitpython-essentials"}),"Essentials")),Object(r.b)("h1",{id:"hardware-setup"},"Hardware Setup"),Object(r.b)("h2",{id:"input-devices"},"Input Devices"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Buttons: Single keys connected between GPIO and GND"),Object(r.b)("li",{parentName:"ul"},"Key Matrix: Matrix of keys with diodes. Columns and rows are connected to GPIOs: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://learn.adafruit.com/adafruit-neokey-5x6-ortho-snap-apart/circuitpython"}),"5x6")," ","[keypad]","(",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://learn.adafruit.com/key-pad-matrix-scanning-in-circuitpython"}),"https://learn.adafruit.com/key-pad-matrix-scanning-in-circuitpython")),Object(r.b)("li",{parentName:"ul"},"Rotary Encoders: A and B connected to GPIOs."),Object(r.b)("li",{parentName:"ul"},"Potentiometers: An Analog value..."),Object(r.b)("li",{parentName:"ul"},"Nunchuck and other digital input devices"),Object(r.b)("li",{parentName:"ul"},"Battery Level: Analog read of battery voltage."),Object(r.b)("li",{parentName:"ul"},"USB Connection: is it connected to computer through USB?")),Object(r.b)("h2",{id:"output-devices"},"Output devices"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"LED: Single LED connected to GPIO"),Object(r.b)("li",{parentName:"ul"},"PWM LED: A number of LEDs connected to a Mosfet for PWM intensity control."),Object(r.b)("li",{parentName:"ul"},"LED Matrix: matrix of LEDs, Columns and Rows are connected to GPIOs"),Object(r.b)("li",{parentName:"ul"},"RGB LEDs: addressable LEDs."),Object(r.b)("li",{parentName:"ul"},"Speaker: Single speaker connected to as GPIO"),Object(r.b)("li",{parentName:"ul"},"Displays: Too many types to count..."),Object(r.b)("li",{parentName:"ul"},"Serial port: useful for debugging...")),Object(r.b)("h2",{id:"hid-profiles"},"HID Profiles"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Keyboard - standard keycodes"),Object(r.b)("li",{parentName:"ul"},"Keyboard - consumer"),Object(r.b)("li",{parentName:"ul"},"Mouse"),Object(r.b)("li",{parentName:"ul"},"Gamepad")),Object(r.b)("h2",{id:"hid-connections"},"HID Connections"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"USB HID"),Object(r.b)("li",{parentName:"ul"},"BLE HID - ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://learn.adafruit.com/ble-hid-keyboard-buttons-with-circuitpython"}),"https://learn.adafruit.com/ble-hid-keyboard-buttons-with-circuitpython"))),Object(r.b)("h1",{id:"keymap-setup"},"Keymap Setup"),Object(r.b)("h1",{id:"main-loop"},"Main Loop"))}u.isMDXComponent=!0}}]);