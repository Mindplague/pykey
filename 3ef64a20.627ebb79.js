(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{68:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return a})),i.d(n,"metadata",(function(){return s})),i.d(n,"rightToc",(function(){return p})),i.d(n,"default",(function(){return c}));var t=i(2),r=i(6),o=(i(0),i(90)),a={id:"neopixels",title:"NeoPixels - RGB LEDs",sidebar_label:"RGB LEDs"},s={unversionedId:"testing_hardware/neopixels",id:"testing_hardware/neopixels",isDocsHomePage:!1,title:"NeoPixels - RGB LEDs",description:"For basic information on NeoPixels and RGB LEDs, refer to this great tutorial from Adafruit",source:"@site/docs/testing_hardware/neopixel.md",slug:"/testing_hardware/neopixels",permalink:"/docs/testing_hardware/neopixels",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/testing_hardware/neopixel.md",version:"current",sidebar_label:"RGB LEDs",sidebar:"someSidebar",previous:{title:"Key Matrix",permalink:"/docs/testing_hardware/keymatrix"},next:{title:"Libraries Needed",permalink:"/docs/setup/libraries"}},p=[],l={rightToc:p};function c(e){var n=e.components,i=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,i,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"For basic information on NeoPixels and RGB LEDs, refer to this great tutorial from ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://learn.adafruit.com/circuitpython-essentials/circuitpython-neopixel"}),"Adafruit")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-python"}),"import time\nimport board\nimport neopixel\nimport rainbowio\n\n# Hardware definition: GPIO where RGB LED is connected. \npixel_pin = board.P0_15\nnum_pixels = 8\n\npixels = neopixel.NeoPixel(pixel_pin, num_pixels, brightness=0.3, auto_write=False)\n\ndef rainbow_cycle(wait):\n    for j in range(255):\n        for i in range(num_pixels):\n            rc_index = (i * 256 // num_pixels) + j\n            pixels[i] = rainbowio.colorwheel(rc_index & 255)\n        pixels.show()\n        time.sleep(wait)\n\nwhile True:\n    rainbow_cycle(0.05) \n\n")))}c.isMDXComponent=!0}}]);