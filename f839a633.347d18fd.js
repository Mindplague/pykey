(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,h=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return n?a.a.createElement(h,c(c({ref:t},s),{},{components:n})):a.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),i=(n(0),n(103)),o={id:"basic",title:"Basic GPIOs",sidebar_label:"Basic GPIOs"},c={unversionedId:"testing_hardware/basic",id:"testing_hardware/basic",isDocsHomePage:!1,title:"Basic GPIOs",description:"For basic information on how to use GPIOs in CircuitPython, refer to this great tutorial from Adafruit.",source:"@site/docs/testing_hardware/basic.md",slug:"/testing_hardware/basic",permalink:"/docs/testing_hardware/basic",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/testing_hardware/basic.md",version:"current",sidebar_label:"Basic GPIOs",sidebar:"someSidebar",previous:{title:"Choosing Firmware Platform",permalink:"/docs/features"},next:{title:"Rotary Encoders",permalink:"/docs/testing_hardware/encoders"}},l=[{value:"What GPIOs are available?",id:"what-gpios-are-available",children:[]},{value:"Test Outputs: LEDs",id:"test-outputs-leds",children:[]},{value:"Test Inputs: Switches/Buttons",id:"test-inputs-switchesbuttons",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"For basic information on how to use GPIOs in CircuitPython, refer to this great tutorial from ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://learn.adafruit.com/circuitpython-digital-inputs-and-outputs"}),"Adafruit"),"."),Object(i.b)("h2",{id:"what-gpios-are-available"},"What GPIOs are available?"),Object(i.b)("p",null,"We assume you know how to get to REPL. To get the list of GPIOs on your board enter these commands in REPL:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import board\ndir(board)\n")),Object(i.b)("p",null,"See some simple example in a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://youtu.be/M7GHp6md2Qc?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"}),"video")),Object(i.b)("p",null,"You will get a list of the identifiers on how to call each GPIO for your controller.  These identifiers are what you need when defining the connections to the keyboard."),Object(i.b)("h2",{id:"test-outputs-leds"},"Test Outputs: LEDs"),Object(i.b)("p",null,"The easiest way to test your board and LEDs is to use a simple ",Object(i.b)("strong",{parentName:"p"},"blink")," program.  You can modify the ",Object(i.b)("inlineCode",{parentName:"p"},"LED Setup")," section to select the GPIO where your LED is connected to the board.  Change ",Object(i.b)("inlineCode",{parentName:"p"},"board.RED_LED")," to the GPIO you want to test.  Try the example below by changing the pin definition"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import board\nfrom digitalio import DigitalInOut, Direction\nimport time\n\n# LED setup.\nled = DigitalInOut(board.RED_LED)\nled.direction = Direction.OUTPUT\n\nwhile True:\n    led.value = True\n    time.sleep(0.5)\n    led.value = False\n    time.sleep(0.5)\n")),Object(i.b)("p",null,"Once running, you should see the LED blink at a rate of once per second."),Object(i.b)("h2",{id:"test-inputs-switchesbuttons"},"Test Inputs: Switches/Buttons"),Object(i.b)("p",null,"To help test and identify the GPIOs connected to Switches (ones directly wired between the GPIO and GND), you can use the following program and modify the ",Object(i.b)("inlineCode",{parentName:"p"},"LED Setup")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Switch Setup")," sections.  Run the program above to validate that there is a LED on the GPIO you select."),Object(i.b)("p",null,"Try the example below by changing the pin definition"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import time\nimport board\nfrom digitalio import DigitalInOut, Direction, Pull\n\n# LED setup.\nled = DigitalInOut(board.RED_LED)\nled.direction = Direction.OUTPUT\n\n# Switch setup.\nswitch = DigitalInOut(board.P0_30)\nswitch.direction = Direction.INPUT\nswitch.pull = Pull.UP\n\nwhile True:\n\n    if switch.value:\n        led.value = False\n    else:\n        led.value = True\n\n    time.sleep(0.01) \n")),Object(i.b)("p",null,"By pressing the switch, you will turn on the LED.\nSee a similar example in a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://youtu.be/37R2OVGrV2w?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"}),"video")),Object(i.b)("p",null,"PWM Video example: ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://youtu.be/Kelr2DD39g8?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"}),"here")))}u.isMDXComponent=!0}}]);