"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[232],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=d(r),m=a,h=u["".concat(l,".").concat(m)]||u[m]||s[m]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1619:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],p={id:"4x4macropad",title:"Raspberry Pi Pico 4x4 Macropad",sidebar_label:"4x4 Macropad V1"},l=void 0,d={unversionedId:"hardware/4x4macropad",id:"hardware/4x4macropad",title:"Raspberry Pi Pico 4x4 Macropad",description:"Raspberry Pi Pico 4x4 Macropad/i/556481/products/2021-09-14T00%3A50%3A10.547Z-PXL20210914004745226.jpg?1631555465)",source:"@site/docs/hardware/4x4macropad.md",sourceDirName:"hardware",slug:"/hardware/4x4macropad",permalink:"/docs/hardware/4x4macropad",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/hardware/4x4macropad.md",tags:[],version:"current",frontMatter:{id:"4x4macropad",title:"Raspberry Pi Pico 4x4 Macropad",sidebar_label:"4x4 Macropad V1"},sidebar:"someSidebar",previous:{title:"Sounds",permalink:"/docs/testing_hardware/sound"},next:{title:"4x4 Macropad V2",permalink:"/docs/hardware/4x4macropadv2"}},c=[{value:"Description",id:"description",children:[],level:2},{value:"Entering the Bootloader &amp; flashing CircuitPython",id:"entering-the-bootloader--flashing-circuitpython",children:[],level:2},{value:"Firmware",id:"firmware",children:[{value:"Libraries needed",id:"libraries-needed",children:[],level:3},{value:"Code",id:"code",children:[],level:3}],level:2},{value:"Schematic",id:"schematic",children:[],level:2},{value:"PCB",id:"pcb",children:[{value:"Top of PCB",id:"top-of-pcb",children:[],level:3},{value:"Bottom of PCB",id:"bottom-of-pcb",children:[],level:3}],level:2},{value:"Build Instructions - Summarized",id:"build-instructions---summarized",children:[],level:2}],s={toc:c};function u(e){var t=e.components,p=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},s,p,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.tindie.com/products/jpconstantineau/raspberry-pi-pico-4x4-macropad/"},(0,o.kt)("img",{parentName:"a",src:"https://cdn.tindiemedia.com/images/resize/Pubqf0yIn05dkHKhwmGQ0Qd6Ov4=/p/fit-in/653x435/filters:fill(fff)/i/556481/products/2021-09-14T00%3A50%3A10.547Z-PXL_20210914_004745226.jpg?1631555465",alt:"Raspberry Pi Pico 4x4 Macropad"}))),(0,o.kt)("p",null,"As seen on the ",(0,o.kt)("a",{parentName:"p",href:"https://blog.tindie.com/2021/09/raspberry-pi-pico-macropad/"},"Tindie Blog!")," as well as on the ",(0,o.kt)("a",{parentName:"p",href:"https://blog.adafruit.com/2021/09/22/a-raspberry-pi-macropad-for-quick-fire-keymaps-circuitpython-raspberrypi-raspberrypipico/"},"Adafruit Blog")),(0,o.kt)("p",null,"Buy it on ",(0,o.kt)("a",{parentName:"p",href:"https://www.tindie.com/products/jpconstantineau/raspberry-pi-pico-4x4-macropad/"},"Tindie")),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"This is a 4x4 Keyboard/keypad/macropad kit for you to build a 16 key macropad with a Raspberry Pi Pico. All you need are 16 MX mechanical switches and keycaps and about an hour for assembly."),(0,o.kt)("h2",{id:"entering-the-bootloader--flashing-circuitpython"},"Entering the Bootloader & flashing CircuitPython"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://circuitpython.org/board/raspberry_pi_pico/"},"Download CircuitPython UF2 file")),(0,o.kt)("li",{parentName:"ul"},"Enter the bootloader by pressing the reset switch while holding Boot switch pressed"),(0,o.kt)("li",{parentName:"ul"},"Copy the UF2 file to the RPI drive.")),(0,o.kt)("h2",{id:"firmware"},"Firmware"),(0,o.kt)("h3",{id:"libraries-needed"},"Libraries needed"),(0,o.kt)("p",null,"You need to download the Adafruit CircuitPython Bundle 7.x from the ",(0,o.kt)("a",{parentName:"p",href:"https://circuitpython.org/libraries"},"CircuitPython Libraries page"),"."),(0,o.kt)("p",null,"Uncompress it and copy the library called ",(0,o.kt)("inlineCode",{parentName:"p"},"adafruit_hid")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"lib")," folder of your macropad."),(0,o.kt)("h3",{id:"code"},"Code"),(0,o.kt)("p",null,"Copy the following to ",(0,o.kt)("inlineCode",{parentName:"p"},"code.py")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# SPDX-FileCopyrightText: 2021 Pierre Constantineau\n# SPDX-License-Identifier: MIT\n# Raspberry Pi Pico 4x4 Macropad \n"""\n    Code adapted from the following sources:\n    MACROPAD Hotkey (https://learn.adafruit.com/macropad-hotkeys/project-code)\n    Pico Four Keypad  (https://learn.adafruit.com/pico-four-key-macropad/code-the-four-keypad)\n"""\nimport board\nimport keypad\nimport usb_hid\nfrom adafruit_hid.keyboard import Keyboard\nfrom adafruit_hid.keycode import Keycode\nfrom adafruit_hid.keyboard_layout_us import KeyboardLayoutUS\n\nkpd = Keyboard(usb_hid.devices)\nkeyboard_layout = KeyboardLayoutUS(kpd)\n\n# define keys for 4x4 v1\nkeys = keypad.KeyMatrix(\n    row_pins=(board.GP0, board.GP1, board.GP2, board.GP3),\n    column_pins=(board.GP4, board.GP5, board.GP6, board.GP7),\n    columns_to_anodes=True,\n)\n\n\nkeymap = [\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Hello World", "Hello World"),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V])\n]\n\nprint("keymap:")\nfor key in keymap:\n    print("\\t", key[0])\n\nwhile True:\n    key_event = keys.events.get()\n    if key_event:  \n        if key_event.pressed:\n            print(keymap[key_event.key_number][0])\n            sequence = keymap[key_event.key_number][1]\n            for item in sequence:\n                if isinstance(item, int):\n                    if item >= 0:\n                        kpd.press(item)\n                    else:\n                        kpdrelease(-item)\n                else:\n                    keyboard_layout.write(item)\n        else:\n            # Release any still-pressed modifier keys\n            for item in sequence:\n                if isinstance(item, int) and item >= 0:\n                    kpd.release(item)\n')),(0,o.kt)("h2",{id:"schematic"},"Schematic"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"schematic",src:r(2735).Z})),(0,o.kt)("h2",{id:"pcb"},"PCB"),(0,o.kt)("h3",{id:"top-of-pcb"},"Top of PCB"),(0,o.kt)("img",{src:"http://pykey.jpconstantineau.com/img/4x4picov1top.svg",width:"500"}),(0,o.kt)("h3",{id:"bottom-of-pcb"},"Bottom of PCB"),(0,o.kt)("img",{src:"http://pykey.jpconstantineau.com/img/4x4picov1bottom.svg",width:"500"}),(0,o.kt)("h2",{id:"build-instructions---summarized"},"Build Instructions - Summarized"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Bottom PCB")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Solder RPI Pico on bottom plate")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Top PCB")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Solder Diodes on Top Plate - make sure that the band on the diode is near the heavier line of on the silkscreen - or the square pad (depends on the top plate)")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/jpconstantineau/ErgoTravel/blob/master/images/diodes.JPG?raw=true",alt:"diodes"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Join Top/Bottom PCB")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cut the headers and sockets in group of 4.  "),(0,o.kt)("li",{parentName:"ul"},"Join/connect the Header and Socket groups together "),(0,o.kt)("li",{parentName:"ul"},"Line up the top/bottom PCB so that the sockets are all on the same side (top or bottom - I usually have the pins at the bottom) "),(0,o.kt)("li",{parentName:"ul"},"make sure that the top plate can be read and has the same orientation as the bottom plate (Need pictures)"),(0,o.kt)("li",{parentName:"ul"},"Solder the Sockets "),(0,o.kt)("li",{parentName:"ul"},"Solder the pins ")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Solder Switches")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Disconnect the top/bottom PCB making sure to pull straight not to bend the pins"),(0,o.kt)("li",{parentName:"ul"},"Install the switches through the PCB. If you have a switch plate (a grid) push the switches through the switch plate as you install them on the PCB"),(0,o.kt)("li",{parentName:"ul"},"Inspect that all switch pins go through the PCB."),(0,o.kt)("li",{parentName:"ul"},"Solder the switches "),(0,o.kt)("li",{parentName:"ul"},"Reconnect the Top/Bottom PCB"),(0,o.kt)("li",{parentName:"ul"},"Install keycaps")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.tindie.com/stores/jpconstantineau/?ref=offsite_badges&utm_source=sellers_jpconstantineau&utm_medium=badges&utm_campaign=badge_medium"},(0,o.kt)("img",{parentName:"a",src:"https://d2ss6ovg47m0r5.cloudfront.net/badges/tindie-mediums.png",alt:"I sell on Tindie"}))))}u.isMDXComponent=!0},2735:function(e,t,r){t.Z=r.p+"assets/images/Schematic-4x4macropadv1-c4ff22e2e0a934bba42fa09f6d93a5ed.png"}}]);