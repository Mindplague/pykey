"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[485],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=i,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5442:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"basic",title:"Basic GPIOs",sidebar_label:"Basic GPIOs"},s=void 0,u={unversionedId:"testing_hardware/basic",id:"testing_hardware/basic",title:"Basic GPIOs",description:"For basic information on how to use GPIOs in CircuitPython, refer to this great tutorial from Adafruit.",source:"@site/docs/testing_hardware/basic.md",sourceDirName:"testing_hardware",slug:"/testing_hardware/basic",permalink:"/docs/testing_hardware/basic",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/testing_hardware/basic.md",tags:[],version:"current",frontMatter:{id:"basic",title:"Basic GPIOs",sidebar_label:"Basic GPIOs"},sidebar:"someSidebar",previous:{title:"Choosing Firmware Platform",permalink:"/docs/features"},next:{title:"Rotary Encoders",permalink:"/docs/testing_hardware/encoders"}},c=[{value:"What GPIOs are available?",id:"what-gpios-are-available",children:[],level:2},{value:"Test Outputs: LEDs",id:"test-outputs-leds",children:[],level:2},{value:"Test Inputs: Switches/Buttons",id:"test-inputs-switchesbuttons",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For basic information on how to use GPIOs in CircuitPython, refer to this great tutorial from ",(0,a.kt)("a",{parentName:"p",href:"https://learn.adafruit.com/circuitpython-digital-inputs-and-outputs"},"Adafruit"),"."),(0,a.kt)("h2",{id:"what-gpios-are-available"},"What GPIOs are available?"),(0,a.kt)("p",null,"We assume you know how to get to REPL. To get the list of GPIOs on your board enter these commands in REPL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import board\ndir(board)\n")),(0,a.kt)("p",null,"See some simple example in a ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/M7GHp6md2Qc?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"},"video")),(0,a.kt)("p",null,"You will get a list of the identifiers on how to call each GPIO for your controller.  These identifiers are what you need when defining the connections to the keyboard."),(0,a.kt)("h2",{id:"test-outputs-leds"},"Test Outputs: LEDs"),(0,a.kt)("p",null,"The easiest way to test your board and LEDs is to use a simple ",(0,a.kt)("strong",{parentName:"p"},"blink")," program.  You can modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"LED Setup")," section to select the GPIO where your LED is connected to the board.  Change ",(0,a.kt)("inlineCode",{parentName:"p"},"board.RED_LED")," to the GPIO you want to test.  Try the example below by changing the pin definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import board\nfrom digitalio import DigitalInOut, Direction\nimport time\n\n# LED setup.\nled = DigitalInOut(board.RED_LED)\nled.direction = Direction.OUTPUT\n\nwhile True:\n    led.value = True\n    time.sleep(0.5)\n    led.value = False\n    time.sleep(0.5)\n")),(0,a.kt)("p",null,"Once running, you should see the LED blink at a rate of once per second."),(0,a.kt)("h2",{id:"test-inputs-switchesbuttons"},"Test Inputs: Switches/Buttons"),(0,a.kt)("p",null,"To help test and identify the GPIOs connected to Switches (ones directly wired between the GPIO and GND), you can use the following program and modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"LED Setup")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Switch Setup")," sections.  Run the program above to validate that there is a LED on the GPIO you select."),(0,a.kt)("p",null,"Try the example below by changing the pin definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import time\nimport board\nfrom digitalio import DigitalInOut, Direction, Pull\n\n# LED setup.\nled = DigitalInOut(board.RED_LED)\nled.direction = Direction.OUTPUT\n\n# Switch setup.\nswitch = DigitalInOut(board.P0_30)\nswitch.direction = Direction.INPUT\nswitch.pull = Pull.UP\n\nwhile True:\n\n    if switch.value:\n        led.value = False\n    else:\n        led.value = True\n\n    time.sleep(0.01) \n")),(0,a.kt)("p",null,"By pressing the switch, you will turn on the LED.\nSee a similar example in a ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/37R2OVGrV2w?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"},"video")),(0,a.kt)("p",null,"PWM Video example: ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/Kelr2DD39g8?list=PLjF7R1fz_OOWFqZfqW9jlvQSIUmwn9lWr"},"here")))}d.isMDXComponent=!0}}]);