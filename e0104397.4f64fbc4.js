(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{103:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=n.a.createContext({}),l=function(e){var t=n.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return n.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=l(r),u=a,m=s["".concat(i,".").concat(u)]||s[u]||b[u]||o;return r?n.a.createElement(m,c(c({ref:t},d),{},{components:r})):n.a.createElement(m,c({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var d=2;d<o;d++)i[d]=r[d];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},150:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/Schematic-4x4macropadv1-c4ff22e2e0a934bba42fa09f6d93a5ed.png"},92:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return l}));var a=r(2),n=r(6),o=(r(0),r(103)),i={id:"4x4macropad",title:"Raspberry Pi Pico 4x4 Macropad",sidebar_label:"4x4 Macropad V1"},c={unversionedId:"hardware/4x4macropad",id:"hardware/4x4macropad",isDocsHomePage:!1,title:"Raspberry Pi Pico 4x4 Macropad",description:"Raspberry Pi Pico 4x4 Macropad/i/556481/products/2021-09-14T00%3A50%3A10.547Z-PXL20210914004745226.jpg?1631555465)",source:"@site/docs/hardware/4x4macropad.md",slug:"/hardware/4x4macropad",permalink:"/docs/hardware/4x4macropad",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/hardware/4x4macropad.md",version:"current",sidebar_label:"4x4 Macropad V1",sidebar:"someSidebar",previous:{title:"Sleep and Power",permalink:"/docs/testing_hardware/sleep"},next:{title:"Raspberry Pi Pico 5x5 Macropad",permalink:"/docs/hardware/5x5macropad"}},p=[{value:"Description",id:"description",children:[]},{value:"Entering the Bootloader &amp; flashing CircuitPython",id:"entering-the-bootloader--flashing-circuitpython",children:[]},{value:"Firmware",id:"firmware",children:[{value:"Libraries needed",id:"libraries-needed",children:[]},{value:"Code",id:"code",children:[]}]},{value:"Schematic",id:"schematic",children:[]},{value:"Build Instructions - Summarized",id:"build-instructions---summarized",children:[]}],d={rightToc:p};function l(e){var t=e.components,i=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.tindie.com/products/jpconstantineau/raspberry-pi-pico-4x4-macropad/"}),Object(o.b)("img",Object(a.a)({parentName:"a"},{src:"https://cdn.tindiemedia.com/images/resize/Pubqf0yIn05dkHKhwmGQ0Qd6Ov4=/p/fit-in/653x435/filters:fill(fff)/i/556481/products/2021-09-14T00%3A50%3A10.547Z-PXL_20210914_004745226.jpg?1631555465",alt:"Raspberry Pi Pico 4x4 Macropad"})))),Object(o.b)("p",null,"As seen on the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://blog.tindie.com/2021/09/raspberry-pi-pico-macropad/"}),"Tindie Blog!")," as well as on the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://blog.adafruit.com/2021/09/22/a-raspberry-pi-macropad-for-quick-fire-keymaps-circuitpython-raspberrypi-raspberrypipico/"}),"Adafruit Blog")),Object(o.b)("p",null,"Buy it on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.tindie.com/products/jpconstantineau/raspberry-pi-pico-4x4-macropad/"}),"Tindie")),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"This is a 4x4 Keyboard/keypad/macropad kit for you to build a 16 key macropad with a Raspberry Pi Pico. All you need are 16 MX mechanical switches and keycaps and about an hour for assembly."),Object(o.b)("h2",{id:"entering-the-bootloader--flashing-circuitpython"},"Entering the Bootloader & flashing CircuitPython"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://circuitpython.org/board/raspberry_pi_pico/"}),"Download CircuitPython UF2 file")),Object(o.b)("li",{parentName:"ul"},"Enter the bootloader by pressing the reset switch while holding Boot switch pressed"),Object(o.b)("li",{parentName:"ul"},"Copy the UF2 file to the RPI drive.")),Object(o.b)("h2",{id:"firmware"},"Firmware"),Object(o.b)("h3",{id:"libraries-needed"},"Libraries needed"),Object(o.b)("p",null,"You need to download the Adafruit CircuitPython Bundle 7.x from the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://circuitpython.org/libraries"}),"CircuitPython Libraries page"),"."),Object(o.b)("p",null,"Uncompress it and copy the library called ",Object(o.b)("inlineCode",{parentName:"p"},"adafruit_hid")," to the ",Object(o.b)("inlineCode",{parentName:"p"},"lib")," folder of your macropad."),Object(o.b)("h3",{id:"code"},"Code"),Object(o.b)("p",null,"Copy the following to ",Object(o.b)("inlineCode",{parentName:"p"},"code.py")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'# SPDX-FileCopyrightText: 2021 Pierre Constantineau\n# SPDX-License-Identifier: MIT\n# Raspberry Pi Pico 4x4 Macropad \n"""\n    Code adapted from the following sources:\n    MACROPAD Hotkey (https://learn.adafruit.com/macropad-hotkeys/project-code)\n    Pico Four Keypad  (https://learn.adafruit.com/pico-four-key-macropad/code-the-four-keypad)\n"""\nimport board\nimport keypad\nimport usb_hid\nfrom adafruit_hid.keyboard import Keyboard\nfrom adafruit_hid.keycode import Keycode\nfrom adafruit_hid.keyboard_layout_us import KeyboardLayoutUS\n\nkpd = Keyboard(usb_hid.devices)\nkeyboard_layout = KeyboardLayoutUS(kpd)\n\n# define keys for 4x4 v1\nkeys = keypad.KeyMatrix(\n    row_pins=(board.GP0, board.GP1, board.GP2, board.GP3),\n    column_pins=(board.GP4, board.GP5, board.GP6, board.GP7),\n    columns_to_anodes=True,\n)\n\n\nkeymap = [\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Hello World", "Hello World"),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V]),\n    ("Select all", [Keycode.LEFT_CONTROL, Keycode.A]),\n    ("Cut", [Keycode.LEFT_CONTROL, Keycode.X]),\n    ("Copy", [Keycode.LEFT_CONTROL, Keycode.C]),\n    ("Paste", [Keycode.LEFT_CONTROL, Keycode.V])\n]\n\nprint("keymap:")\nfor key in keymap:\n    print("\\t", key[0])\n\nwhile True:\n    key_event = keys.events.get()\n    if key_event:  \n        if key_event.pressed:\n            print(keymap[key_event.key_number][0])\n            sequence = keymap[key_event.key_number][1]\n            for item in sequence:\n                if isinstance(item, int):\n                    if item >= 0:\n                        kpd.press(item)\n                    else:\n                        kpdrelease(-item)\n                else:\n                    keyboard_layout.write(item)\n        else:\n            # Release any still-pressed modifier keys\n            for item in sequence:\n                if isinstance(item, int) and item >= 0:\n                    kpd.release(item)\n')),Object(o.b)("h2",{id:"schematic"},"Schematic"),Object(o.b)("p",null,Object(o.b)("img",{alt:"schematic",src:r(150).default})),Object(o.b)("h2",{id:"build-instructions---summarized"},"Build Instructions - Summarized"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Bottom PCB")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Solder RPI Pico on bottom plate")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Top PCB")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Solder Diodes on Top Plate - make sure that the band on the diode is near the heavier line of on the silkscreen - or the square pad (depends on the top plate)")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/jpconstantineau/ErgoTravel/blob/master/images/diodes.JPG?raw=true",alt:"diodes"}))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Join Top/Bottom PCB")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Cut the headers and sockets in group of 4.  "),Object(o.b)("li",{parentName:"ul"},"Join/connect the Header and Socket groups together "),Object(o.b)("li",{parentName:"ul"},"Line up the top/bottom PCB so that the sockets are all on the same side (top or bottom - I usually have the pins at the bottom) "),Object(o.b)("li",{parentName:"ul"},"make sure that the top plate can be read and has the same orientation as the bottom plate (Need pictures)"),Object(o.b)("li",{parentName:"ul"},"Solder the Sockets "),Object(o.b)("li",{parentName:"ul"},"Solder the pins ")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Solder Switches")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Disconnect the top/bottom PCB making sure to pull straight not to bend the pins"),Object(o.b)("li",{parentName:"ul"},"Install the switches through the PCB. If you have a switch plate (a grid) push the switches through the switch plate as you install them on the PCB"),Object(o.b)("li",{parentName:"ul"},"Inspect that all switch pins go through the PCB."),Object(o.b)("li",{parentName:"ul"},"Solder the switches "),Object(o.b)("li",{parentName:"ul"},"Reconnect the Top/Bottom PCB"),Object(o.b)("li",{parentName:"ul"},"Install keycaps")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.tindie.com/stores/jpconstantineau/?ref=offsite_badges&utm_source=sellers_jpconstantineau&utm_medium=badges&utm_campaign=badge_medium"}),Object(o.b)("img",Object(a.a)({parentName:"a"},{src:"https://d2ss6ovg47m0r5.cloudfront.net/badges/tindie-mediums.png",alt:"I sell on Tindie"})))))}l.isMDXComponent=!0}}]);