(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var i=n(2),a=n(6),r=(n(0),n(89)),o={id:"basic",title:"Basic GPIOs",sidebar_label:"Basic GPIOs"},s={unversionedId:"testing_hardware/basic",id:"testing_hardware/basic",isDocsHomePage:!1,title:"Basic GPIOs",description:"For basic information on how to use GPIOs in CircuitPython, refer to this page",source:"@site/docs/testing_hardware/basic.md",slug:"/testing_hardware/basic",permalink:"/docs/testing_hardware/basic",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/testing_hardware/basic.md",version:"current",sidebar_label:"Basic GPIOs",sidebar:"someSidebar",previous:{title:"Features Compared",permalink:"/docs/features"},next:{title:"Rotary Encoders",permalink:"/docs/testing_hardware/encoders"}},c=[],u={rightToc:c};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"For basic information on how to use GPIOs in CircuitPython, refer to this ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://learn.adafruit.com/circuitpython-digital-inputs-and-outputs"}),"page")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"import time\nimport board\nfrom digitalio import DigitalInOut, Direction, Pull\n\n# LED setup.\nled = DigitalInOut(board.RED_LED)\nled.direction = Direction.OUTPUT\n\n# Switch setup.\nswitch = DigitalInOut(board.P0_30)\nswitch.direction = Direction.INPUT\nswitch.pull = Pull.UP\n\nwhile True:\n\n    if switch.value:\n        led.value = False\n    else:\n        led.value = True\n\n    time.sleep(0.01)  # debounce delay\n")),Object(r.b)("p",null,"miniMACRO5:"),Object(r.b)("p",null,"MATRIX_COL_PINS { 30, 43, 28, 24, 10}"),Object(r.b)("p",null,"ENCODER_PAD_A  {26, 8, 15, 17, 9 }"),Object(r.b)("p",null,"ENCODER_PAD_B  {6, 29, 2, 20, 13 }"))}d.isMDXComponent=!0}}]);