(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{103:function(t,e,n){"use strict";n.d(e,"a",(function(){return O})),n.d(e,"b",(function(){return p}));var b=n(0),l=n.n(b);function c(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);e&&(b=b.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,b)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){c(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,b,l=function(t,e){if(null==t)return{};var n,b,l={},c=Object.keys(t);for(b=0;b<c.length;b++)n=c[b],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(b=0;b<c.length;b++)n=c[b],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=l.a.createContext({}),a=function(t){var e=l.a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},O=function(t){var e=a(t.components);return l.a.createElement(d.Provider,{value:e},t.children)},j={inlineCode:"code",wrapper:function(t){var e=t.children;return l.a.createElement(l.a.Fragment,{},e)}},i=l.a.forwardRef((function(t,e){var n=t.components,b=t.mdxType,c=t.originalType,r=t.parentName,d=u(t,["components","mdxType","originalType","parentName"]),O=a(n),i=b,p=O["".concat(r,".").concat(i)]||O[i]||j[i]||c;return n?l.a.createElement(p,o(o({ref:e},d),{},{components:n})):l.a.createElement(p,o({ref:e},d))}));function p(t,e){var n=arguments,b=e&&e.mdxType;if("string"==typeof t||b){var c=n.length,r=new Array(c);r[0]=i;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:b,r[1]=o;for(var d=2;d<c;d++)r[d]=n[d];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,n)}i.displayName="MDXCreateElement"},81:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return r})),n.d(e,"metadata",(function(){return o})),n.d(e,"rightToc",(function(){return u})),n.d(e,"default",(function(){return a}));var b=n(2),l=n(6),c=(n(0),n(103)),r={id:"compared",title:"Versions Compared",sidebar_label:"Compared"},o={unversionedId:"encoderpad/compared",id:"encoderpad/compared",isDocsHomePage:!1,title:"Versions Compared",description:"Basic",source:"@site/docs/encoderpad/compared.md",slug:"/encoderpad/compared",permalink:"/docs/encoderpad/compared",editUrl:"https://github.com/jpconstantineau/pykey/tree/main/documentation/docs/encoderpad/compared.md",version:"current",sidebar_label:"Compared",sidebar:"someSidebar",previous:{title:"Libraries Needed",permalink:"/docs/setup/libraries"}},u=[],d={rightToc:u};function a(t){var e=t.components,n=Object(l.a)(t,["components"]);return Object(c.b)("wrapper",Object(b.a)({},d,n,{components:e,mdxType:"MDXLayout"}),Object(c.b)("table",null,Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",{colspan:"2"}),Object(c.b)("th",{colspan:"3"},"Basic"),Object(c.b)("th",{colspan:"3"},"Pro/Wireless"),Object(c.b)("th",null,"RP2040/RGB"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{colspan:"2"},"Compatible Board"),Object(c.b)("td",null,"Seeeduino XIAO"),Object(c.b)("td",null,"Adafruit QT Py"),Object(c.b)("td",null,"Adafruit QT Py RP2040"),Object(c.b)("td",null,"Pro Micro"),Object(c.b)("td",null,"BlueMicro840 Nice!Nano"),Object(c.b)("td",null,"Pro Micro RP2040"),Object(c.b)("td",null,"Included on PCB")),Object(c.b)("tr",null,Object(c.b)("td",{rowspan:"4"},"Processor Details"),Object(c.b)("td",null,"CPU"),Object(c.b)("td",null,"SAMD21G18 32-bit Cortex M0+"),Object(c.b)("td",null,"SAMD21G18 32-bit Cortex M0+"),Object(c.b)("td",null,"RP2040 32-bit Cortex M0+"),Object(c.b)("td",null,"ATMega32U4 8-bit AVR"),Object(c.b)("td",null,"nRF52840 32-bit Cortex M4"),Object(c.b)("td",null,"RP2040 32-bit Cortex M0+"),Object(c.b)("td",null,"RP2040 32-bit Cortex M0+")),Object(c.b)("tr",null,Object(c.b)("td",null,"Flash "),Object(c.b)("td",null,"256KB "),Object(c.b)("td",null,"256KB"),Object(c.b)("td",null,"8MB"),Object(c.b)("td",null,"32KB"),Object(c.b)("td",null,"1 MB"),Object(c.b)("td",null,"16MB"),Object(c.b)("td",null,"16MB")),Object(c.b)("tr",null,Object(c.b)("td",null,"RAM "),Object(c.b)("td",null,"32KB "),Object(c.b)("td",null,"32KB"),Object(c.b)("td",null,"264KB "),Object(c.b)("td",null,"2.5 KB"),Object(c.b)("td",null,"256 KB"),Object(c.b)("td",null,"264KB"),Object(c.b)("td",null,"264KB")),Object(c.b)("tr",null,Object(c.b)("td",null,"Other "),Object(c.b)("td",null," "),Object(c.b)("td",null),Object(c.b)("td",null,"2 Cores"),Object(c.b)("td",null),Object(c.b)("td",null,"BLE Radio"),Object(c.b)("td",null,"2 Cores"),Object(c.b)("td",null,"2 Cores")),Object(c.b)("tr",null,Object(c.b)("td",{rowspan:"3"},"Compatible Firmware"),Object(c.b)("td",null,"Arduino "),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705")),Object(c.b)("tr",null,Object(c.b)("td",null,"CircuitPython "),Object(c.b)("td",null,"\u2705 "),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705")),Object(c.b)("tr",null,Object(c.b)("td",null,"Other "),Object(c.b)("td",null," "),Object(c.b)("td",null),Object(c.b)("td",null),Object(c.b)("td",null,"QMK"),Object(c.b)("td",null,"BlueMicro_BLE, ZMK"),Object(c.b)("td",null),Object(c.b)("td",null)),Object(c.b)("tr",null,Object(c.b)("td",{rowspan:"2",colspan:"2"},"Input Features"),Object(c.b)("td",{colspan:"3"},"9 MX Switches"),Object(c.b)("td",{colspan:"3"},"9 MX Switches"),Object(c.b)("td",null,"9 Hot Swap MX Switches")),Object(c.b)("tr",null,Object(c.b)("td",{colspan:"3"},"100 Step 60mm Rotary Encoder"),Object(c.b)("td",{colspan:"3"},"100 Step 60mm Rotary Encoder"),Object(c.b)("td",null,"100 Step 60mm Rotary Encoder")),Object(c.b)("tr",null,Object(c.b)("td",{rowspan:"2",colspan:"2"},"Feedback Features"),Object(c.b)("td",{rowspan:"2",colspan:"3"}," None "),Object(c.b)("td",{colspan:"3"},"9 White LEDs"),Object(c.b)("td",{colspan:"3"},"9 RGB LEDs")),Object(c.b)("tr",null,Object(c.b)("td",{colspan:"3"},"Speaker"),Object(c.b)("td",null,"Speaker")),Object(c.b)("tr",null,Object(c.b)("td",{rowspan:"2"},"Assembly"),Object(c.b)("td",null,"No Soldering Needed?"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u2705")),Object(c.b)("tr",null,Object(c.b)("td",null,"Simple Assembly"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u2705"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u274c"),Object(c.b)("td",null,"\u2705")))))}a.isMDXComponent=!0}}]);